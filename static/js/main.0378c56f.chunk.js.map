{"version":3,"sources":["components/intro/Intro.tsx","components/main_content/ContentHandler.tsx","components/main_content/navigation_menu/styles.js","components/main_content/navigation_menu/ContentNavigationMenu.js","components/main_content/navigation_menu/helpers.js","components/main_content/MainContent.tsx","App.tsx","serviceWorker.js","index.js","components/intro/location.png","components/intro/profile-pic.jpg"],"names":["Intro","className","src","require","alt","ArrowDownIcon","size","ContentHandler","Frame","styled","Title","Content","animated","div","toggle","width","height","marginRight","cursor","verticalAlign","Tree","memo","children","name","style","defaultOpen","active","onClick","useState","isOpen","setOpen","previous","value","ref","useRef","useEffect","current","usePrevious","left","top","bounds","set","ResizeObserver","entry","contentRect","ro","observe","disconnect","useMeasure","bind","viewHeight","useSpring","from","opacity","transform","to","icon","MinusIcon","PlusIcon","handleIcon","fontWeight","color","ContentNavigationMenu","content","handleMenuClick","contentItems","MainContent","setContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0378c56f.chunk.js","sourcesContent":["import { ArrowDownIcon } from 'evergreen-ui';\r\nimport React from 'react';\r\nimport './Intro.scss';\r\n\r\nfunction Intro() {\r\n    return (\r\n        <div className={ `intro-container` }>\r\n            <div className={ 'intro-header' }>\r\n                <div className={ `frosted-glass` }>\r\n                    <div className={ `intro-text` }>\r\n                        <h1>Randy Le</h1>\r\n                            <br/>\r\n                            <div className={ `location-div` }>\r\n                                <img className={ `location` } src={ require( './location.png') } alt={ `Location` } />\r\n                                <h3>CANADA</h3>\r\n                            </div>\r\n                            <p>\r\n                                welcome\r\n                                <br/>\r\n                                this is mostly just a playground for me to play around with libraries and designs\r\n                            </p>\r\n                    </div>\r\n                    <div className={ `intro-image` }>\r\n                        <img src={ require( './profile-pic.jpg' ) } alt={ `Profile` }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={ `intro-footer` }>\r\n                <div className={ `text` }>\r\n                    get<br/>started\r\n                </div>\r\n                <ArrowDownIcon size={ 20 }/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Intro;","import React from 'react';\r\nimport './ContentHandler.scss';\r\n\r\nfunction ContentHandler() {\r\n    return (\r\n        <div>\r\n            CONTENT IN PROGRESS\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentHandler;","import styled from 'styled-components'\r\nimport { animated } from 'react-spring'\r\n\r\nconst Frame = styled('div')`\r\n  position: relative;\r\n  padding: 4px 0px 0px 0px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n  vertical-align: middle;\r\n  color: black;\r\n  fill: black;\r\n`\r\n\r\nconst Title = styled('span')`\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    font-weight: bold;\r\n    color: #115644;\r\n  }\r\n`\r\n\r\nconst Content = styled(animated.div)`\r\n  will-change: transform, opacity, height;\r\n  margin-left: 6px;\r\n  padding: 0px 0px 0px 14px;\r\n  border-left: 1px dashed rgba(255, 255, 255, 0.4);\r\n  overflow: hidden;\r\n`\r\n\r\nconst toggle = {\r\n  width: '1em',\r\n  height: '1em',\r\n  marginRight: 10,\r\n  cursor: 'pointer',\r\n  verticalAlign: 'middle'\r\n}\r\n\r\nexport { Frame, Content, toggle, Title }\r\n","import { MinusIcon, PlusIcon } from 'evergreen-ui'\r\nimport React, { memo, useState } from 'react'\r\nimport { useSpring, a } from 'react-spring'\r\nimport { useMeasure, usePrevious } from './helpers'\r\nimport { Frame, Title, Content, toggle } from './styles'\r\nimport './ContentNavigationMenu.scss'\r\n\r\nconst Tree = memo(({ children, name, style, defaultOpen = false, active, onClick }) => {\r\n  const [isOpen, setOpen] = useState(defaultOpen)\r\n  const previous = usePrevious(isOpen)\r\n  const [bind, { height: viewHeight }] = useMeasure()\r\n  const { height, opacity, transform } = useSpring({\r\n    from: { height: 0, opacity: 0, transform: 'translate3d(20px,0,0)' },\r\n    to: { height: isOpen ? viewHeight : 0, opacity: isOpen ? 1 : 0, transform: `translate3d(${isOpen ? 0 : 20}px,0,0)` }\r\n  })\r\n\r\n  const handleIcon = () => {\r\n    const icon = `${children ? (isOpen ? 'Minus' : 'Plus') : 'Close'}`\r\n    let style = { \r\n      ...toggle, \r\n      opacity: children ? 1 : 0.3,\r\n    }\r\n\r\n    switch ( icon ) {\r\n      case `Minus`:\r\n        return <MinusIcon style={style} size={20} onClick={() => setOpen(!isOpen)}/>\r\n      case `Plus`:\r\n        return <PlusIcon style={style} size={20} onClick={() => setOpen(!isOpen)}/>\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Frame>\r\n      { handleIcon() }\r\n      <Title \r\n        style={ { ...style, fontWeight: active ? `bold`: null, color: active ? `#115644` : null } } \r\n        onClick={ () => { \r\n          if ( `${children ? ( isOpen ? 'Minus' : 'Plus') : 'Close'}` !== `Close` ) {\r\n             setOpen( !isOpen );\r\n          } else if ( onClick ) {\r\n            onClick(name);\r\n          }\r\n        } }>\r\n          {name}\r\n      </Title>\r\n      <Content style={{ opacity, height: isOpen && previous === isOpen ? 'auto' : height }}>\r\n        <a.div style={{ transform }} {...bind} children={children} />\r\n      </Content>\r\n    </Frame>\r\n  )\r\n})\r\n\r\nfunction ContentNavigationMenu ( content, handleMenuClick ) {\r\n  return (\r\n    <div className={ `content-navigation-container` }>\r\n      <div className={ `content-navigation-menu` }>\r\n        <Tree name=\"About\" active={content === `About`} onClick={ handleMenuClick }/>\r\n        <Tree name=\"Hobbies & Interests\">\r\n          <Tree name=\"Dogs\" active={content === `Dogs`} onClick={ handleMenuClick }/>\r\n          <Tree name=\"Basketball\" active={content === `Basketball`} onClick={ handleMenuClick }/>\r\n          <Tree name=\"Anime\" active={content === `Anime`} onClick={ handleMenuClick }/>\r\n          <Tree name=\"Games\" active={content === `Games`} onClick={ handleMenuClick }/>\r\n        </Tree>\r\n        <Tree name=\"Contact Information\" active={content === `Contact Information`} onClick={ handleMenuClick }/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContentNavigationMenu;\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\n\r\nexport function usePrevious(value) {\r\n  const ref = useRef()\r\n  useEffect(() => void (ref.current = value), [value])\r\n  return ref.current\r\n}\r\n\r\nexport function useMeasure() {\r\n  const ref = useRef()\r\n  const [bounds, set] = useState({ left: 0, top: 0, width: 0, height: 0 })\r\n  const [ro] = useState(() => new ResizeObserver(([entry]) => set(entry.contentRect)))\r\n  useEffect(() => {\r\n    if (ref.current) ro.observe(ref.current)\r\n    return () => ro.disconnect()\r\n  }, [])\r\n  return [{ ref }, bounds]\r\n}","import React, { useState } from 'react';\r\nimport ContentHandler from './ContentHandler';\r\nimport './MainContent.scss';\r\nimport ContentNavigationMenu from './navigation_menu/ContentNavigationMenu';\r\n\r\ninterface State {\r\n    content: string;\r\n}\r\n\r\nexport const contentItems = [ `About` ];\r\n\r\nfunction MainContent() {\r\n    const [content, setContent] = useState<string|null>( contentItems[0] );\r\n\r\n    function handleMenuClick( content:any ) {\r\n        setContent( content );\r\n    }\r\n\r\n    return (\r\n        <div className={ `content-scroller` }>\r\n            {/* <ContentNavigationMenu handleMenuClick={handleMenuClick}/> */}\r\n            { ContentNavigationMenu(content, handleMenuClick) }\r\n            <div className={ `content` }>\r\n                <ContentHandler/>\r\n            </div>\r\n        </div>      \r\n    );\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\nimport './App.css';\n\nimport Intro from './components/intro/Intro';\nimport MainContent from './components/main_content/MainContent';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Intro/>\n      </header>\n        <MainContent/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/location.a3b2d28b.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-pic.2440a2c1.jpg\";"],"sourceRoot":""}